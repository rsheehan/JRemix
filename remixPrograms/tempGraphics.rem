using graphics lib
	window : a window with shape layers
	base-layer : (window) base layer
	next-layer : (window) next layer

	repeat 2 times
		shape : a square
		shape's colour : random colour
		shape's position : random point
		shape's size : random from 10 to 100
		shape's heading  : random from 1 to 90
		add (shape) to (next-layer)

=	for each (y-pos) from 40 to (std height - 20) in steps of 80 do
		arrow : a triangle
		arrow's size : 20
		arrow's position : {0, y-pos}
=		add (arrow) to (base-layer)

	rotate-squares : every 1 tick
		for each (square) in (next-layer's shapes) do
			change (square) heading by 2 degrees

=	move-arrows : every 2 ticks
		for each (arrow) in (base-layer's shapes) do
=			change (arrow) x-pos by 5

	animation-block : animate 2 ticks per second
		animate (rotate-squares)
		-animate (move-arrows)
		update (window)
	… until [arrow's x-pos ≥ std width]

= at this point the context library stack is changed
So calling 'animate 2 ticks per second [block] until [block]
has done this.
=
	debug (animation-block)

"Finished" ↲
