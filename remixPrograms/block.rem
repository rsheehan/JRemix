- 'test' block has value of last statement when executed
"** PRINT AND EVAL BLOCK **" ↲

'A' : "This should be printed after \"Doing the block.\""

- block here is a variable with a block as the value not a function
'block' :
	1
	"Doing the block." ↲
	3
	'A'

'block' ↲
do 'block' ↲

'test' : ['A' < 'B']
'A' : 7
'B' : 5
'A', " is " ~
if 'test'
	"less than " ~
… otherwise
	"not less than " ~
'B' ↲
new line

'test' :
	"a:", 'A', ", " ~
	"b:", 'B' ↲

fn 'block' :
	'A' : 5
	'B' : 7
	do 'block'

fn 'test'
"Should be \"a:7, b:5\"" ↲

'A' : 3
'B' : 1
fn 'test'
"Should be \"a:3, b:1\"" ↲
