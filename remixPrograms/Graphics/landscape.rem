using graphics lib

	'window' : the graphics panel
	'window'’s 'colour' : SKY-BLUE

	'back layer'  : 'window' base layer
	'cloud layer' : 'window' next layer
	'front layer' : 'window' next layer
	
	add the sun on the 'back layer'
	add the mountains on the 'back layer'
	add the sea on the 'back layer'
	add the islands on the 'front layer'
	update 'window'	

	'the clouds' : 10 clouds in the 'cloud layer'

	animate 'window' 600 times at 30 ticks per second
		for each 'cloud' in 'the clouds'
			move 'cloud'

-============================================================================-

	add the sun on the 'layer' :
		'sun' : YELLOW circle of radius 40 at {800, 100}
		place 'sun' in 'layer'
		
	add the mountains on the 'layer' :
		repeat 20 times
			'mountain' : a DARK-GREY mountain with BLACK edges
			… of height 300 based at 600
			place 'mountain' in 'layer'

	add the sea on the 'layer' :
		'sea' : DARK-BLUE box of STD-WIDTH x 200 at {
			STD-WIDTH ÷ 2
			STD-HEIGHT - 100
		}
		place 'sea' in 'layer'

	add the islands on the 'layer' :
		for each 'location' from 650 to 680 in steps of 3
			'island' : a GREY mountain with WHITE edges
			… of height 250 based at 'location'
			place 'island' in 'layer'

	'n' clouds in the 'layer' :
		apply
			'cloud' : a cloud
			place ('cloud' parts) in 'layer'
			'cloud'
		… 'n' times

	=
	A mountain is an isosceles triangle.
	=
	a 'colour' mountain with 'outline colour' edges
	… of height 'max height' based at 'level' :
		'centre' : random STD-WIDTH
		'height' : random 'max height' + 20
		'width'  : random 150 + 300
		'mountain' : 'colour' shape from {
			{ 0, -'height' }
			{ 'width' ÷ 2, 0 }
			{ -'width' ÷ 2, 0 }
		} scaled by 1 at { 'centre', 'level' }
		'mountain'’s 'outline colour' : 'outline colour'
		'mountain'

	=
	A cloud is a composite object comprising of two circles, a rectangle
	and a line.

	Each part is added separately to the same window layer using the list
	returned from "MY parts".

	When animated the "move ME" method changes the positions of all the parts.
	The "move ME" also wraps the cloud around when it passes off the window.
	=
	a cloud :

		- setting up the object’s field values

		'base'   : random (STD-HEIGHT - 200)
		'across' : random STD-WIDTH
		'r1' : random 10 + 30
		'r2' : random 10 + 20
		'distance' : 10
		if ('r1' > 'r2') ; bigger circle to the right
			'r1' swap 'r2'

		'x1' : ('across' - 'r1') + 'distance'
		'x2' : ('across' + 'r2') - 'distance'
		'y1' : 'base' - 'r1'
		'y2' : 'base' - 'r2'

		'circle A' : WHITE circle of radius 'r1' at { 'x1', 'y1' }
		'circle A'’s 'outline colour' : BLACK
		'circle B' : WHITE circle of radius 'r2' at { 'x2', 'y2' }
		'circle B'’s 'outline colour' : BLACK

		'width' : 'x2' - 'x1'
		'height' : 'y1' - 'y2' + 'r1'
		'position' : {
			('x1' + 'x2') ÷ 2
			('y1' + 'r1' + 'y2' + 1) ÷ 2
		}

		'box' : WHITE box of 'width' x 'height' at 'position'
		'line' : BLACK line from {'x1', 'y1' + 'r1'} to {'x2', 'y1' + 'r1'}
		'line'’s 'width' : 2

		- creating the object
		
		create
			- these are fields

			'circle A' : 'circle A'
			'circle B' : 'circle B'
			'box'  : 'box'
			'line' : 'line'
			'size' : 'circle A'’s 'radius' + 'circle B'’s 'radius' + 
			… ('circle B'’s 'x-pos' - 'circle A'’s 'x-pos')

			- these are methods

			MY parts :
				{ 'circle A', 'circle B', 'box', 'line' }

			move ME :
				'left edge' : 'circle A'’s 'x-pos' - 'circle A'’s 'radius'
				if ('left edge' < STD-WIDTH) ; ordinary move right
					for each 'part' in (MY parts)
						change 'part' x-pos by 1
				… otherwise ; wrap the cloud around the window
					for each 'part' in (MY parts)
						change 'part' x-pos by -(STD-WIDTH + 'size')
