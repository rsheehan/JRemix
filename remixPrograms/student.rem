=
'student' record
=

'students' : {
	"Martin Developer" age 22 knows {
		"Java" : "Expert"
		"python" : "Advanced"
		"Remix" : "Expert"
	}
	"May Smith" age 25 knows {
		"C++" : "Advanced"
		"C" : "Expert"
		"C#" : "Competent"
	}
	"Ray Oflight" age 19 knows {
		"python" : "Novice"
	}
}

"student data" ↲
"============" ↲
for each 'student' in 'students'
	'student' name ↲
	'student' age ↲
	'student' languages ↲
	↲

merge {"BASIC" : "Expert"} into (('students' {2}) languages)

"Expertise" ↲
"=========" ↲
for each 'student' in 'students'
	'student' ↲

----------------

'name' age 'age' knows 'languages' :
	create
		'name' : 'name'
		'age' : 'age'
		'languages' : 'languages'

		getter
			'name', 'age'
			'languages'

		MY expert languages :
			filter 'languages' by 'language' where
				'languages' {'language'} = "Expert"

		ME to string :
			'result' : 'name' ⊕ " age " ⊕ 'age' ⊕ ", expert in "
			'expertise' : MY expert languages
			if (no 'expertise')
				'result' ⊕ "nothing"
			… otherwise
				for each 'language' in 'expertise' keeping 'count'
					when
						['count' = 1] do
							'result' : 'result' ⊕ 'language'
						['count' < 'expertise' length] do
							'result' : 'result' ⊕ ", " ⊕ 'language'
						'result' ⊕ " and " ⊕ 'language'
