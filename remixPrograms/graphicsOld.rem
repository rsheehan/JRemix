"Graphics library loaded." ↲

library "edu.fizz.remix.libraries.Graphics"

	std width :
		1000
	std height :
		800

	centre point :
		{std width ÷ 2, std height ÷ 2}

	random point :
		{random (std width), random (std height)}

	scale (polygon) by (size) :
		scaled-polygon : {}
		for each (point) in (polygon) do
			if ((point) is a "map")
				append { point{x} × size, point{y} × size } to (scaled-polygon)
			… otherwise
				append { point{1} × size, point{2} × size } to (scaled-polygon)

	white colour :
		{255, 255, 255}
	black colour :
		{0, 0, 0}
	red colour :
		{255, 0, 0}
	green colour :
		{0, 255, 0}
	blue colour :
		{0, 0, 255}

	random colour :
		{random 255, random 255, random 255}

	show drawing window :
		window : "Drawing" window of width (std width) and height (std height)
		show window (window)

	draw random line :
		draw (random colour) line from (random point) to (random point)

	(colour) shape from (polygon) scaled by (size) at (position) facing (heading) :

		create
			colour : colour
			polygon : polygon
			position : position
			heading : heading
			size : size

			setter
				colour, position, heading, size

			draw (me) :
				(colour) pen colour
				scaled-polygon : scale (polygon) by (scale)
				draw (scaled-polygon) at (position) facing (heading)

			fill (me) :
				(colour) pen colour
				scaled-polygon : scale (polygon) by (scale)
				fill (scaled-polygon) at (position) facing (heading)

	shape from (polygon) :
		(white colour) shape from (polygon) scaled by 1 at (centre point) facing 0

	shape from (polygon) at (position) :
		(white colour) shape from (polygon) scaled by 1 at (position) facing 0

	shape from (polygon) scaled by (scale) at (position) :
		(white colour) shape from (polygon) scaled by (scale) at (position) facing 0

	shape from (polygon) scaled by (scale) at (position) facing (heading) :
		(white colour) shape from (polygon) scaled by (scale) at (position) facing (heading)

