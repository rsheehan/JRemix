"Hello world!" ↲

repeat [] 1000000 times

"Finished!" \n ; the \n now works

1, 2, 3 ↲
1 _. 2 _. 3 ↲

print "Goodbye world!" ↲

"not true is ", not true ↲

A : 1
if (A = 1)
	"A is equal to 1" ↲

B : true

"A is ", A, ", B is ", B ↲
if ((A != 1) or (B))
	"A is not 1 or B is true" ↲

(for each Value in {1, 2, 3, 4} do
	Value _
	if (Value = 2)
		return "Wow!"
) _

for each Count from 5 to 10 do
	Count _
new line

repeat
	"Hi" _
... 10 times
new line

X : 1
(repeat [X _. X : X + 1] until [X = 10]) ↲

while [X > 0] do
	(X × X) _
	X : X - 1
new line

Evens : filter (1 to 10) by Value where [Value is divisible by 2]
length of Evens ↲
Evens ↲
for each I in Evens do [I _]
new line

keep X from (1 to 100) until [X = 20] ↲

Cubes : apply
	I × I × I
... to each I from (1 to 20)

for each Value in Cubes do
	Value _
new line

X : 1
Ten : apply
	inc X
... 10 times
(type of Ten) ↲
for each I in Ten do
	I _
new line

for each I from 1 to 10 do
	(I × I × I) _
new line

for each I from 1 to 10 do
	if (I > 5)
		return
	I _
new line

Nested : {
	1 to 4
	{2, 4, 6, 8}
	{3, 6, 9, 12}
}

for each Row in Nested do
	for each Item in Row do
		(Item × Item) _
	new line
new line

- A person class
make person called Name of age Age with Colour hair :
	"making a person object" ↲
	create
		Name : Name
		Age : Age
		Hair : Colour

		getter/setter
			Age

		getter
			Name

		setter
			Hair

		MY Age : ; overwrites the Age getter
			Age × 2

		MY Age Years : ; overwrites the Age setter
			Age : Years + 100

		print person ME :
			Name,", age ",Age,", hair ",Hair ↲
			private add to Age

		private add to Age :
			Age : Age + 1

- Another class
another class with same method name :
	create
		print person ME :
			"I am anonymous." ~

		call ME :
			print person ME
			" From another method." ↲

Robert : make person called "Robert" of age 64 with "grey" hair
{Robert's Name, " ", Robert's Age} ↲
print person Robert
Stephanie : make person called "Stephanie" of age 61 with "brown" hair
print person Stephanie
print person Robert
print person Stephanie
Stephanie's Name, " ", Stephanie's Age ↲

print person (another class with same method name). new line
Robert's Age : 11. Robert's Hair : "blue"
print person Robert
Robert's Name, " ", Robert's Age ↲ ; possessives are no longer syntactic sugar
-Robert Name, " ", Robert Age ↲ ; so these two lines are the same

Copy : another class with same method name
call Copy

repeat
	"hi" _
... 5 times. new line

I : 1
repeat [I _. I : I + 1] until [I = 10]
Result : while
	I ≥ 0
… do
	I _. I : I - 1

Result ↲ ; this prints -1

A : {
	1
	2
	3
	4
}

for each Item in A do
	Item _

Person : {"Name" : "Robert", "Age" : 65}
Person ↲
Person {"Name"} : "blah"
Person ↲