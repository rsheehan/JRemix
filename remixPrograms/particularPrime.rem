=================
Calculate a prime
=================

prime number N :
	if (N = 1)
		return 2
	PRIME-COUNT : 1
	PRIMES : {2}
	repeat
		BIGGEST-PRIME : last in PRIMES
		START : BIGGEST-PRIME + 1
		FINISH : BIGGEST-PRIME × BIGGEST-PRIME + 1
		TEST-RANGE : START to FINISH
		MORE-PRIMES : {}
		RESULT : PRIME-COUNT stopping at N filter X from TEST-RANGE producing MORE-PRIMES
			X is not divisible by any number in PRIMES up to (√ X)
		if (RESULT = 0)
			PRIMES : join PRIMES and MORE-PRIMES
		… otherwise
			return RESULT
	… forever

-----------

#COUNT stopping at N filter #ITEM from LIST producing #MORE-PRIMES [CONDITION-BLOCK] :
	for each #ITEM in LIST do
		if CONDITION-BLOCK
			inc #COUNT
			if (#COUNT = N)
				return #ITEM
			append #ITEM to #MORE-PRIMES
		0

X is not divisible by any number in LIST up to LIMIT :
	for each NUMBER in LIST do
		if (X is divisible by NUMBER)
			return false
		if (NUMBER > LIMIT)
			return true
		true

-----------

test {
	"prime 1"
		prime number 1
	… expected 2

	"prime 10"
		prime number 10
	… expected 29

	"prime 100"
		prime number 100
	… expected 541

	"prime 1000"
		prime number 1000
	… expected 7919

	"prime 10000"
		prime number 10000
	… expected 104729

	"prime 100000"
		prime number 100000
	… expected 1299709

=	"prime 1000000"
		prime number 1000000
=	… expected 15485863
}
