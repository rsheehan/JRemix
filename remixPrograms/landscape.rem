using graphics lib

	'the window' : the graphics panel
	'the window's 'background colour' : SKY-BLUE

	draw the landscape in 'the window'
	add 'clouds'

	animate 'the window' 1000 times at 30 ticks per second
		for each 'cloud' in 'clouds'
			move 'cloud'

-============================================================================-

draw the landscape in 'the window' :
	'the back layer'  : 'the window' base layer
	THE-CLOUD-LAYER : 'the window' next layer
	- a constant can be accessed anywhere
	'the front layer' : 'the window' next layer
	add the back mountains on 'the back layer'
	add the sea on 'the back layer'
	add the front islands on 'the front layer'
	update 'the window'

add the back mountains on 'the back layer' :
	"back mountains" ↲
	repeat 20 times
		'mountain' : a DARK-GREY mountain with BLACK outline of 300
		… based at 600
		place 'mountain' in 'the back layer'

add the sea on 'the back layer' :
	"sea" ↲
	'box' : a DARK-BLUE box of STD-WIDTH x 200 at {
		STD-WIDTH ÷ 2
		STD-HEIGHT - 100
	}
	place 'box' in 'the back layer'

add the front islands on 'the front layer' :
	"front islands" ↲
	for each 'location' from 650 to 680 in steps of 3 do
		'island' : a GREY mountain with WHITE outline of 250
		… based at 'location'
		place 'island' in 'the front layer'

add #clouds :
	#clouds : apply
		'cloud' : a cloud
		place ('cloud' parts) in THE-CLOUD-LAYER
		'cloud'
	… 10 times

=
A mountain is an isosceles triangle.
=
a 'colour' mountain with 'outline colour' outline of 'max height' based at 'level' :
	'centre' : random STD-WIDTH
	'height' : random 'max height' + 20
	'width'  : random 150 + 300
	'mountain' : a 'colour' shape from {
		{ 0, -'height' }
		{ 'width' ÷ 2, 0 }
		{ -'width' ÷ 2, 0 }
	} scaled by 1 at { 'centre', 'level' }
	'mountain's 'outline colour' : 'outline colour'
	return 'mountain'

=
A cloud is a composite object comprising of two circles, a rectangle and a line.

Each part is added separately to the same window layer using the list returned from "MY parts".

When animated the "move ME" method changes the positions of all the parts.
The "move ME" also wraps the cloud around when it passes off the window.
=
a cloud :
	'base'   : random (STD-HEIGHT - 200)
	'across' : random STD-WIDTH
	'r1' : random 10 + 30
	'r2' : random 10 + 20
	'distance' : 10
	if ('r1' > 'r2')
		'r1' swap 'r2'

	'cloud' : create

		- these are fields

		'x1' : ('across' - 'r1') + 'distance'
		'x2' : ('across' + 'r2') - 'distance'
		'y1' : 'base' - 'r1'
		'y2' : 'base' - 'r2'
		'radius A' : 'r1'
		'radius B' : 'r2'
		'circle A' : null
		'circle B' : null
		'box' : null
		'line' : null

		- these are methods

		MY parts :
			{ 'circle A', 'circle B', 'box', 'line' }

		move ME :
			increment 'x1'
			increment 'x2'
			if (('x1' - 'radius A') > STD-WIDTH)
				'back' : 0 - 'radius B'
				'x1' : 'back' - ('x2' - 'x1')
				'x2' : 'back'
			'circle A's 'position' : { 'x1', 'y1' }
			'circle B's 'position' : { 'x2', 'y2' }
			'box's 'position' : {
				('x1' + 'x2') ÷ 2
				('y1' + 'radius A' + 'y2' + 1) ÷ 2
			}
			'line's 'start' : { 'x1', 'y1' + 'radius A' }
			'line's 'finish' : { 'x2', 'y1' + 'radius A' }

		setup MY parts :
			'circle A' : a WHITE circle of radius 'radius A' at { 'x1', 'y1' }
			'circle A's 'outline colour' : BLACK
			'circle B' : a WHITE circle of radius 'radius B' at { 'x2', 'y2' }
			'circle B's 'outline colour' : BLACK
			'position' : { ('x1' + 'x2') ÷ 2, ('y1' + 'radius A' + 'y2' + 1) ÷ 2 }
			'width' : 'x2' - 'x1'
			'height' : 'y1' - 'y2' + 'radius A'
			'box' : a WHITE box of 'width' x 'height' at 'position'
			'line' : a BLACK line from {
				'x1', 'y1' + 'radius A'
			} to {
				'x2', 'y1' + 'radius A'
			}
			'line's 'width' : 2

	setup 'cloud' parts
	return 'cloud'
