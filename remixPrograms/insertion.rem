'list' : apply [random 100] 400 times

"unsorted: ", 'list' ↲

check for missing values in 'list'
insertion sort 'list'

"sorted: ", 'list' ↲

----------

check for missing values in 'list' :
	'count of values' : apply [0] 100 times
	count each item in 'list' into 'count of values'
	for each 'item' in 'count of values' keeping 'count'
		if ('item' = 0)
			'count', " is missing" ↲

count each item in 'list' into 'tally' :
	for each 'item' in 'list'
		increment ('tally' {'item'})

================
 Insertion Sort
================

insertion sort 'list' :
	for each 'position' from 2 to ('list' length)
		for each 'this' from 'position' to 2
			swap if element to the left is greater than 'this' in 'list'

swap if element to the left is greater than 'this' in 'list' ::
- N.B. transparent short circuit
	'left' : 'this' - 1
	if ('list' {'left'} > 'list' {'this'})
		('list' {'left'}) swap ('list' {'this'})
	… otherwise
		return
