list : apply [random 100] 400 times

"unsorted: ", (list) as string ↲

check for missing values in (list)
insertion sort (list)

"sorted: ", (list) as string ↲

----------

check for missing values in (list) :
	count-of-values : apply [0] 100 times
	count each item in (list) into (count-of-values)
	for each (item) in (count-of-values) keeping (count) do
		if (item = 0)
			count, " is missing" ↲

count each item in (list) into (result) :
	for each (item) in (list) do
		result{item} : result{item} + 1

================
 Insertion Sort
================

insertion sort (list) :
	for each (position) from 2 to (length of (list)) do
		for each (this) from (position) to 2 do
			swap if element to the left is greater than (this) in (list)

swap if element to the left is greater than (this) in (list) ::
- N.B. transparent short circuit
	left : this - 1
	if (list{left} > list{this})
		swap (list) element (this) with (left)
	… otherwise
		return

swap (list) element (this) with (that) :
	temp : list{this}
	list{this} : list{that}
	list{that} : temp
