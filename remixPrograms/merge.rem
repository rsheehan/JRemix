'my list' : apply [random 1000] 1000 times
'my list' ↲

merge-sort 'my list'
'my list' ↲

============
 Merge sort
============

merge-sort 'list' :
	sort 'list' from 1 to ('list' length)

sort 'list' from 'start' to 'finish' :
	if ('start' ≥ 'finish')
		return
	'middle' : 'start' + ('finish' - 'start') ÷ 2
	sort 'list' from 'start' to 'middle'
	sort 'list' from ('middle' + 1) to 'finish'
	merge 'list' from 'start' to 'middle' to 'finish'

merge 'list' from 'start' to 'middle' to 'finish' :
	'left' : 'start'
	'right' : 'middle' + 1
	'working list' : { }
	- while values on both sides
	while [('left' ≤ 'middle') and ('right' ≤ 'finish')]
		if ('list' {'left'} ≤ 'list' {'right'})
			append ('list' {'left' inc}) to 'working list'
		… otherwise
			append ('list' {'right' inc}) to 'working list'
	- remaining values on the 'left'
	if ('left' ≤ 'middle')
		for each 'item' in 'list' from position 'left' to 'middle'
			append 'item' to 'working list'
	- remaining values on the 'right'
	if ('right' ≤ 'finish')
		for each 'item' in 'list' from position 'right' to 'finish'
			append 'item' to 'working list'
	- put back in original 'list'
	for each 'item' from 'start' to 'finish'
		'list' {'item'} : 'working list' {'item' - 'start' + 1}
