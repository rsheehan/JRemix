===========================
'file' Operations and Objects
===========================
'files library' : library "edu.fizz.remix.libraries.RemixFiles"

	HOME : file directory (home)

	a file with absolute path 'name' :
		create
			'name' : 'name'

			read ME :
				read file 'name' ; Java

			ME to string :
				'name'

			=============================================
			Produces a sequence of lines from the 'file'.
			This can be used in for loops.
			=============================================
			lines from ME :
				create
					'file' : ME

					start ME :
						-iterator
						create
							'data' : read 'file'
							'position' : 0

							end ME :
								'position' ≥ length of 'data'

							next ME :
								'line' : ""
								'char' : ""
								while [('position' ≠ length of 'data') and ('char' ≠ CR)]
									'char' : (increment 'position') in 'data'
									'line' : 'line' ⊕ 'char'

					ME to string :
						"sequence of lines from " ⊕ ('file' to string)

			=============================================
			Produces a sequence of words from the 'file'.
			This can be used in for loops.
			=============================================
			words from ME :
				create
					'file' : ME

					start ME :
						-iterator
						create
							'data' : read 'file'
							'position' : 0

							end ME :
								throw away whitespace
								'position' = length of 'data'

							next ME :
								throw away whitespace
								'word' : ""
								while ['position' ≠ length of 'data']
									'char' : (increment 'position') in 'data'
									if ('char' is in WHITE-SPACE)
										return 'word'
									'word' : 'word' ⊕ 'char'

							throw away whitespace :
								while ['position' ≠ length of 'data']
									'char' : (increment 'position') in 'data'
									if ('char' is not in WHITE-SPACE)
										decrement 'position'
										return
					ME to string :
						"sequence of words from " ⊕ ('file' to string)

			==================================================
			Produces a sequence of characters from the 'file'.
			This can be used in for loops.
			==================================================
			characters from ME :
				create
					'file' : ME

					start ME :
						-iterator
						create
							'data' : read 'file'
							'position' : 0

							end ME :
								'position' = length of 'data'

							next ME :
								(increment 'position') in 'data'

					ME to string :
						"sequence of characters from " ⊕ ('file' to string)
	=-
	A file directory object base on 'directory name'.
	Can be used to access files inside the directory.
	=-
	file directory 'directory name':
		create
			'directory' : 'directory name' ⊕ path separator

			file 'name' in ME :
				a file with absolute path ('directory' ⊕ 'name')

			ME to string :
				'directory'

-==================================================================================================-

"Files library loaded." ↲
'files library'